[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\unknow\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\unknow\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Azul Systems, Inc. Java 11.0.12)
[debug]       Load.loadUnit: plugins took 347.861624ms
[debug]       Load.loadUnit: defsScala took 1.394932ms
[debug] [Loading] Scanning directory C:\Users\unknow\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 47.517276 ms
[debug]           Load.resolveProject(global-plugins) took 125.650754ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\unknow\.sbt\1.0\plugins, plugins: List(<none>))) took 292.155302ms
[debug] [Loading] Done in C:\Users\unknow\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 422.729374ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.912071ms
[debug]     Load.loadUnit(file:/C:/Users/unknow/.sbt/1.0/plugins/, ...) took 797.509463ms
[debug]   Load.apply: load took 1241.727794ms
[debug]   Load.apply: resolveProjects took 22.848433ms
[debug]   Load.apply: finalTransforms took 162.783949ms
[debug]   Load.apply: config.delegates took 20.181267ms
[debug]   Load.apply: Def.make(settings)... took 1923.921132ms
[debug]   Load.apply: structureIndex took 385.55979ms
[debug]   Load.apply: mkStreams took 3.263395ms
[info] loading global plugins from C:\Users\unknow\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 9087.457598ms
[debug]           Load.loadUnit: plugins took 91.070427ms
[debug]           Load.loadUnit: defsScala took 0.01213ms
[debug] [Loading] Scanning directory C:\Users\unknow\IdeaProjects\untitled\project
[debug]             Load.loadUnit: mkEval took 20.176135ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.003316 ms
[info] loading settings for project untitled-build from assembly.sbt,idea.sbt ...
[debug]               Load.resolveProject(untitled-build) took 5.385185ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: C:\Users\unknow\IdeaProjects\untitled\project, plugins: List(<none>))) took 10.511912ms
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 439.28335ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.714879ms
[debug]         Load.loadUnit(file:/C:/Users/unknow/IdeaProjects/untitled/project/, ...) took 546.450083ms
[debug]       Load.apply: load took 551.363138ms
[debug]       Load.apply: resolveProjects took 0.28925ms
[debug]       Load.apply: finalTransforms took 23.192268ms
[debug]       Load.apply: config.delegates took 0.891077ms
[debug]       Load.apply: Def.make(settings)... took 282.310531ms
[debug]       Load.apply: structureIndex took 106.981054ms
[debug]       Load.apply: mkStreams took 0.004665ms
[info] loading project definition from C:\Users\unknow\IdeaProjects\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2345.578881ms
[debug]     Load.loadUnit: defsScala took 0.007931ms
[debug] [Loading] Scanning directory C:\Users\unknow\IdeaProjects\untitled
[debug]       Load.loadUnit: mkEval took 0.909272ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 9.251808 ms
[info] loading settings for project untitled from build.sbt ...
[debug]         Load.resolveProject(untitled) took 131.20156ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled, base: C:\Users\unknow\IdeaProjects\untitled, plugins: List(<none>))) took 142.524305ms
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled, returning: (untitled)
[debug]     Load.loadUnit: loadedProjectsRaw took 424.09025ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.221413ms
[debug]   Load.loadUnit(file:/C:/Users/unknow/IdeaProjects/untitled/, ...) took 2793.583591ms
[debug] Load.apply: load took 2801.500182ms
[debug] Load.apply: resolveProjects took 0.188479ms
[debug] Load.apply: finalTransforms took 81.797158ms
[debug] Load.apply: config.delegates took 0.817365ms
[debug] Load.apply: Def.make(settings)... took 417.748673ms
[debug] Load.apply: structureIndex took 88.743362ms
[debug] Load.apply: mkStreams took 0.003732ms
[info] set current project to untitled (in build file:/C:/Users/unknow/IdeaProjects/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59282 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59282, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled (in build file:/C:/Users/unknow/IdeaProjects/untitled/)
[debug] > Exec(idea-shell, None, None)
