[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\unknow\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\unknow\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 1466.016446ms
[debug]       Load.loadUnit: defsScala took 0.877546ms
[debug] [Loading] Scanning directory C:\Users\unknow\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 91.091208 ms
[debug]           Load.resolveProject(global-plugins) took 215.156395ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\unknow\.sbt\1.0\plugins, plugins: List(<none>))) took 779.212103ms
[debug] [Loading] Done in C:\Users\unknow\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 915.030152ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.740852ms
[debug]     Load.loadUnit(file:/C:/Users/unknow/.sbt/1.0/plugins/, ...) took 2421.057272ms
[debug]   Load.apply: load took 4124.775248ms
[debug]   Load.apply: resolveProjects took 62.316478ms
[debug]   Load.apply: finalTransforms took 1411.290902ms
[debug]   Load.apply: config.delegates took 19.17911ms
[debug]   Load.apply: Def.make(settings)... took 4191.966048ms
[debug]   Load.apply: structureIndex took 860.287346ms
[debug]   Load.apply: mkStreams took 2.841177ms
[info] loading global plugins from C:\Users\unknow\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 23821.291844ms
[debug]           Load.loadUnit: plugins took 219.044469ms
[debug]           Load.loadUnit: defsScala took 0.013063ms
[debug] [Loading] Scanning directory C:\Users\unknow\IdeaProjects\untitled\project
[debug]             Load.loadUnit: mkEval took 27.11621ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.184808 ms
[info] loading settings for project untitled-build from assembly.sbt,idea.sbt ...
[debug]               Load.resolveProject(untitled-build) took 6.733449ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: C:\Users\unknow\IdeaProjects\untitled\project, plugins: List(<none>))) took 14.111645ms
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 12761.528227ms
[debug]           Load.loadUnit: cleanEvalClasses took 24.932843ms
[debug]         Load.loadUnit(file:/C:/Users/unknow/IdeaProjects/untitled/project/, ...) took 13007.652983ms
[debug]       Load.apply: load took 13013.97635ms
[debug]       Load.apply: resolveProjects took 1.304422ms
[debug]       Load.apply: finalTransforms took 37.14757ms
[debug]       Load.apply: config.delegates took 5.728074ms
[debug]       Load.apply: Def.make(settings)... took 353.970044ms
[debug]       Load.apply: structureIndex took 355.17556ms
[debug]       Load.apply: mkStreams took 0.004198ms
[info] loading project definition from C:\Users\unknow\IdeaProjects\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 21488.725334ms
[debug]     Load.loadUnit: defsScala took 0.005599ms
[debug] [Loading] Scanning directory C:\Users\unknow\IdeaProjects\untitled
[debug]       Load.loadUnit: mkEval took 0.934463ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 16.402781 ms
[info] loading settings for project untitled from build.sbt ...
[debug]         Load.resolveProject(untitled) took 238.090617ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled, base: C:\Users\unknow\IdeaProjects\untitled, plugins: List(<none>))) took 256.72855ms
[debug] [Loading] Done in C:\Users\unknow\IdeaProjects\untitled, returning: (untitled)
[debug]     Load.loadUnit: loadedProjectsRaw took 9594.637314ms
[debug]     Load.loadUnit: cleanEvalClasses took 180.270103ms
[debug]   Load.loadUnit(file:/C:/Users/unknow/IdeaProjects/untitled/, ...) took 31265.49841ms
[debug] Load.apply: load took 31280.721799ms
[debug] Load.apply: resolveProjects took 0.228134ms
[debug] Load.apply: finalTransforms took 112.920683ms
[debug] Load.apply: config.delegates took 0.917667ms
[debug] Load.apply: Def.make(settings)... took 239.20796ms
[debug] Load.apply: structureIndex took 88.006968ms
[debug] Load.apply: mkStreams took 0.004199ms
[info] set current project to untitled (in build file:/C:/Users/unknow/IdeaProjects/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54668 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54668, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled (in build file:/C:/Users/unknow/IdeaProjects/untitled/)
[debug] > Exec(idea-shell, None, None)
